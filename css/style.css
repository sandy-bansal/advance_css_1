/* keyframe is a method in css for making animation here 0 is the animation at initial
and 100 is animation on complete we can add any percentage b/w it like 80% */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(4rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-4rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes logoAnimation {
  0% {
    opacity: 1;
    transform: rotate(180deg); }
  100% {
    opacity: 1; } }

/* universal selector for clean code b/c browser have some default value for element*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* by default box-sizing is not inheritable property so here we make it */ }

html {
  /* this is the root font size which is default of 16px 
    but for shake of simplicity we use 10px so that we can calcutae rem unit easily */
  /* b/c 1 rem is equal to the root font size now 1 rem = 10px */
  /* font-size: 10px; */
  /* font size in px is bad practice so we need to change it in % now we need 10px so divide 10/16 = .625 */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* to prevent shakyness while animation use backface-visibility property */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* for animation to work we need to define two properties */
    /* we can also use shortcut also instead of defining to two properties
        by using animation property */
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-in;
    /*
        animation-delay: 3s;
        animation-iteration-count: 2;
        */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 2s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 30px; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn {
  /* :link and :visited is pseudo-class, pseudo-class are a special state of a selector */ }
  .btn:link, .btn:visited {
    font-size: 1.6rem;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* this mean 15 from top and bottom and 40 from left and right */
    display: inline-block;
    /* by giving this button will not overlap with sub heading */
    border-radius: 10rem;
    transition: all 0.2s;
    /* this will apply all animation */ }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.5);
    /* this means 0 in x dir and 10 in y 20px is blurryness */ }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) +  6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + (2 * 6rem)); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.7), rgba(40, 180, 133, 0.7)), url("../img/hero.jpg");
  background-size: cover;
  /* cover always try to fit in block */
  background-position: top;
  /* header is a parent element of logo-box so it needs to set position relative 
    because in logo-box there is top :40px left: 40px to header */
  position: relative;
  /* This is advance css property which clip image and it goes in clockwise direction 
    clip-path: polygon(x y, x y, x y) */
  clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    /* both top and left are measured from parent element which is header */
    left: 4rem; }
  .header__logo {
    height: 4.5rem;
    animation: logoAnimation 2s ease-in; }
  .header__logo:hover {
    transform: rotate(180deg); }
  .header__text-box {
    position: absolute;
    top: 40%;
    /* because text-box position is absolute so this top and left are relative to parent element */
    left: 50%;
    transform: translate(-50%, -50%);
    /* b/c the button is inline-block so it is treated like a text so we can center button
        by simple text-align */
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
